import torch
import numpy as np
from torch import nn
import torchvision as tv
import torchvision.transforms as tf
import os

class LeNet(nn.Module):
    def __init__(self):
        super(LeNet, self).__init__()
        self.conlayer = nn.Sequential(
            nn.Conv2d(3, 6, 5, 1), #32, out28
            nn.BatchNorm2d(6),
            nn.ReLU(),
            nn.MaxPool2d(2, 2), #out 14
            nn.Conv2d(6, 16, 5, 1), #10
            nn.BatchNorm2d(16),
            nn.ReLU(),
            nn.MaxPool2d(2, 2), #5

        )
        self.linear = nn.Sequential(
            nn.Linear(5*5*16, 120),
            nn.ReLU(),
            nn.Linear(120, 10),
            nn.Softmax(dim=1)
        )

    def forward(self, x):
        out_con = self.conlayer(x)
        out_con = out_con.reshape(-1, 5*5*16)
        return self.linear(out_con)
